plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

ext {
    jarName = project.name
    mainClassName = 'com.white.helix.HelixApplication'
}

group = 'com.white'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

// 生成启动脚本打包
apply plugin: 'java'
apply plugin: 'application'

jar.manifest.attributes 'Main-Class': mainClassName


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {  //远程仓库，根据先后顺序，决定优先级
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenCentral()
}

jar {
    configurations.runtime.each { println it.path }
    println "========="
    configurations.compile.each { println it.path }
    println "========="
    from {
        //添加依懒到打包文件
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtime.collect { zipTree(it) }
    }

}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'mysql:mysql-connector-java'
//    implementation 'org.projectlombok:lombok:1.18.8'

	compileOnly 'org.projectlombok:lombok'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

